/* ====================================================
 *                  控制台欢迎信息
 * ==================================================== */
console.log("%c 🌈 Theme By Ether | 作者：林翊 | 官网：https://amrx.me 🌈", 
  "color:#2D2D2D;background:#F9F9F9;padding: 4px;border: 2px solid #000;border-radius: 0;font-family: 'Courier New';text-shadow: 1px 1px 0 #FFF;box-shadow: 3px 3px 0 #D3D3D3;margin:30px 0;");

/* ====================================================
 *                  评论代码块模态框功能
 * ==================================================== */

/**
 * 初始化单个代码块的模态框功能
 * @param {HTMLElement} preElement - 要初始化的pre元素
 */
function initSingleCodeModal(preElement) {
    const $pre = $(preElement);
    
    // 防止重复初始化
    if ($pre.data('has-modal')) return;
    $pre.data('has-modal', true);
    
    // 获取代码内容
    const codeContent = $pre.html();
    // 生成唯一模态框ID
    const modalId = 'modal-' + Math.random().toString(36).substr(2, 9);
    
    // 添加查看代码按钮
    $pre.before(`
        <button class="code-modal-btn" data-modal="${modalId}">
            查看完整代码
        </button>
    `);

    // 添加模态框到页面
    $('body').append(`
        <div id="${modalId}" class="code-modal">
            <div class="modal-content">
                <div class="modal-toolbar">
                    <span class="close-modal">&times;</span>
                    <button class="copy-btn">📋 复制代码</button>
                </div>
                <div class="modal-code">
                    <pre>${codeContent}</pre>
                </div>
            </div>
        </div>
    `);
}

/**
 * 初始化页面中所有代码块的模态框功能
 */
function initCodeModal() {
    $('.comments-content pre').each(function() {
        initSingleCodeModal(this);
    });
}

/**
 * 初始化页面功能
 */
function initPage() {
    // 初始化代码模态框
    initCodeModal();
    
    // 使用事件委托处理动态内容
    $(document)
        // 移除旧事件绑定防止重复
        .off('click', '.code-modal-btn')
        // 点击按钮显示模态框
        .on('click', '.code-modal-btn', function() {
            $('#' + $(this).data('modal')).fadeIn(200);
        })
        // 移除旧事件绑定防止重复
        .off('click', '.close-modal')
        // 点击关闭按钮关闭模态框
        .on('click', '.close-modal', function(e) {
            $(this).closest('.code-modal').fadeOut(200);
            e.stopPropagation(); // 阻止事件冒泡
        })
        // 点击模态框外部关闭模态框
        .on('click', '.code-modal', function(e) {
            if ($(e.target).hasClass('code-modal')) {
                $(this).fadeOut(200);
            }
        })
        // 移除旧事件绑定防止重复
        .off('click', '.copy-btn')
        // 点击复制按钮处理复制功能
        .on('click', '.copy-btn', handleCopy);
}

/**
 * 处理代码复制功能
 */
async function handleCopy() {
    const $btn = $(this);
    // 获取要复制的代码内容
    const code = $btn.closest('.modal-content').find('pre').text();
    
    try {
        // 尝试使用现代剪贴板API
        await navigator.clipboard.writeText(code);
        $btn.html('✅ 已复制');
        setTimeout(() => $btn.html('📋 复制代码'), 2000);
    } catch (err) {
        // 回退方案：使用传统方法
        const textarea = document.createElement('textarea');
        textarea.value = code;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        $btn.html('✓ 已复制');
        setTimeout(() => $btn.html('📋 复制代码'), 1500);
    }
}

/* ====================================================
 *                  返回顶部功能
 * ==================================================== */
(function() {
    // 获取返回顶部按钮元素
    const backToTopButton = document.querySelector('.back-to-top');
    // 设置显示按钮的滚动阈值（300px）
    const scrollThreshold = 300;

    /**
     * 根据滚动位置显示/隐藏返回顶部按钮
     */
    function toggleButton() {
        if (window.scrollY > scrollThreshold) {
            backToTopButton.classList.add('show');
        } else {
            backToTopButton.classList.remove('show');
        }
    }

    /**
     * 平滑滚动到页面顶部
     */
    function scrollToTop() {
        const startPosition = window.scrollY;
        const duration = 500; // 动画持续时间(毫秒)
        const startTime = performance.now();

        /**
         * 滚动动画步骤
         * @param {number} timestamp 时间戳
         */
        function scrollStep(timestamp) {
            const elapsed = timestamp - startTime;
            const progress = Math.min(elapsed / duration, 1);
            // 使用缓动函数使滚动更平滑
            const easeProgress = 1 - Math.pow(1 - progress, 3);

            window.scrollTo(0, startPosition * (1 - easeProgress));

            if (progress < 1) {
                requestAnimationFrame(scrollStep);
            }
        }

        requestAnimationFrame(scrollStep);
    }

    // 监听滚动事件
    window.addEventListener('scroll', toggleButton);
    // 监听按钮点击事件
    backToTopButton.addEventListener('click', scrollToTop);

    // 初始化时检查按钮状态
    toggleButton();
})();

/* ====================================================
 *                  赞助弹窗功能
 * ==================================================== */
function initRewardModal() {
    // 点击触发按钮显示模态框
    $('.post-reward_btn').on('click', function(e) {
        e.preventDefault();
        $('.reward-modal').addClass('is-open');
    });

    // 点击关闭按钮或遮罩层隐藏模态框
    $('.close-btn, .modal-overlay').on('click', function() {
        $('.reward-modal').removeClass('is-open');
    });

    // 阻止模态框内容点击事件冒泡
    $('.modal-body').on('click', function(e) {
        e.stopPropagation();
    });
}

/* ====================================================
 *                  通知弹窗功能
 * ==================================================== */
function initNoticeModal() {
    // 点击触发按钮显示模态框
    $('.notice-trigger-btn').on('click', function(e) {
        e.preventDefault();
        $('.notice-modal').addClass('is-open');
    });

    // 点击关闭按钮或遮罩层隐藏模态框
    $('.close-btn, .modal-overlay').on('click', function() {
        $('.notice-modal').removeClass('is-open');
    });

    // 阻止模态框内容点击事件冒泡
    $('.modal-body').on('click', function(e) {
        e.stopPropagation();
    });
}

/* ====================================================
 *                  首页幻灯片功能
 * ==================================================== */
function initCarousel() {
    // 销毁旧实例避免重复初始化
    if ($('.single-list').hasClass('slick-initialized')) {
        $('.single-list').slick('unslick');
    }
    
    // 初始化新轮播实例
    $('.single-list').slick({
        autoplay: true,          // 自动播放
        autoplaySpeed: 3000,     // 自动播放速度(ms)
        dots: true,              // 显示指示点
        arrows: false,           // 隐藏箭头
        infinite: true,          // 无限循环
        speed: 500,              // 切换速度(ms)
        slidesToShow: 1,         // 每次显示1张
        slidesToScroll: 1,       // 每次滚动1张
        adaptiveHeight: true,    // 自适应高度
        pauseOnHover: true,      // 悬停暂停
        pauseOnFocus: true,      // 获取焦点时暂停
        responsive: [            // 响应式配置
            {
                breakpoint: 768,  // 768px以下配置
                settings: {
                    arrows: false,
                    dots: true
                }
            },
            {
                breakpoint: 480,  // 480px以下配置
                settings: {
                    arrows: false,
                    dots: true,
                    adaptiveHeight: false
                }
            }
        ]
    });
}

/* ====================================================
 *                  首页文章展开收起功能
 * ==================================================== */
function initArticleFold() {
    // 清理旧绑定 (防止重复初始化)
    $('.blog_content').removeData('initialized');

    // 遍历所有文章容器
    $('.post_conter').each(function() {
        const $post = $(this);
        const $content = $post.find('.blog_content');
        
        // 跳过已处理内容
        if ($content.data('initialized')) return;

        // 动态计算参数
        const lineHeight = parseInt($content.css('line-height')) || 24;
        const maxLines = 8;
        const maxHeight = lineHeight * maxLines;

        // 判断是否需要折叠
        if ($content.height() > maxHeight) {
            $content
                .css({
                    'max-height': maxHeight + 'px',
                    'overflow': 'hidden',
                    'position': 'relative',
                    'transition': 'max-height 0.3s ease-out'
                })
                .append('<div class="fade-overlay"></div>')
                .after(`
                    <div class="content-controls">
                        <a class="show-more" href="#">展开 ↓</a>
                        <a class="show-less" href="#" style="display:none">收起 ↑</a>
                    </div>
                `)
                .data('initialized', true);
        }
    });
}

// 使用事件委托处理动态内容的展开/收起
$(document)
    .on('click', '.show-more', function(e) {
        e.preventDefault();
        const $control = $(this).closest('.content-controls');
        const $content = $control.prev('.blog_content');
        
        $content
            .css('max-height', $content[0].scrollHeight + 'px')
            .find('.fade-overlay').fadeOut(200);
        
        $control.find('.show-more').hide();
        $control.find('.show-less').show();
    })
    .on('click', '.show-less', function(e) {
        e.preventDefault();
        const $control = $(this).closest('.content-controls');
        const $content = $control.prev('.blog_content');
        const lineHeight = parseInt($content.css('line-height')) || 24;
        
        $content
            .css('max-height', lineHeight * 8 + 'px')
            .find('.fade-overlay').fadeIn(200);
        
        $control.find('.show-less').hide();
        $control.find('.show-more').show();
    });

/**
 * 动态加载内容后重新初始化
 */
function onNewContentLoaded() {
    initArticleFold();
    $('.fade-overlay').fadeIn(0); // 确保新内容的遮罩可见
}

/* ====================================================
 *                  无限滚动加载更多文章
 * ==================================================== */
function setupScrollLoad() {
    var isLoading = false; // 加载状态标记

    // 监听滚动和触摸移动事件
    $(window).on('scroll touchmove', function() {
        // 计算当前滚动位置 + 窗口高度
        var scrollBottom = Math.floor($(window).scrollTop()) + window.innerHeight;
        var documentHeight = $(document).height();

        // 检查是否接近底部且没有正在加载
        if (!isLoading && Math.abs(scrollBottom - documentHeight) < 50 && $('.archive_next .next').length > 0) {
            isLoading = true; // 标记为正在加载
            setTimeout(function() {
                $('.archive_next .next').click(); // 触发加载更多
            }, 300); // 延迟300ms触发
        }
    });

    // 点击加载更多按钮的处理
    $('.main-content').on('click', '.archive_next .next', function() {
        var $this = $(this);
        $this.addClass('loading').text("loading"); // 添加加载状态
        var href = $this.attr('href'); // 获取下一页链接

        if (href !== undefined) {
            $.ajax({
                url: href,
                type: 'get',
                error: function(request) {
                    console.error('加载失败:', request);
                    $this.removeClass('loading').text("加载失败，点击重试");
                    isLoading = false;
                },
                success: function(data) {
                    $this.removeClass('loading').text("more"); // 移除加载状态

                    // 插入新内容
                    var $res = $(data).find('.article-item');
                    $('.index_list').append($res.fadeIn(500));

                    // 更新下一页链接
                    var newHref = $(data).find('.archive_next .next').attr('href');
                    if (newHref !== undefined) {
                        $('.archive_next .next').attr('href', newHref);
                    } else {
                        $('.archive_next .next').remove(); // 没有更多内容时移除按钮
                        $('.archive_next').append('<span class="over">已全部加载</span>');
                    }

                    isLoading = false; // 重置加载状态
                    // 重载pjax
                    pjax.refresh();
                
                    // 初始化新内容
                    onNewContentLoaded();
                }
            });
        }
        return false; // 阻止默认行为
    });
}

/* ====================================================
 *                  移动端导航菜单
 * ==================================================== */
function initMenu() {
    // 菜单按钮点击事件
    $('.life_menu').click(function(e) {
        if ($('.navbar-nav').css('left') != '0px') {
            $('.navbar-nav').css('left', '0');
            $('.menu_off').css('left', '0');
        } else {
            $('.menu_off').click();
        }
    });
    
    // 关闭菜单按钮点击事件
    $('.menu_off').click(function(e) {
        $('.navbar-nav').css('left', '-18rem');
        $('.menu_off').css('left', '-100vw');
    });
}

/* ====================================================
 *                  评论加载更多功能
 * ==================================================== */
const loadedPages = new Set(); // 存储已加载的页面URL，防止重复加载

function comments_next() {
    const loadMoreButton = document.getElementById('load-more-comments');
    if (!loadMoreButton) return;

    loadMoreButton.addEventListener('click', async () => {
        const nextPageUrl = document.querySelector('.page-navigator .next a')?.href;
        if (!nextPageUrl) {
            updateLoadMoreButton();
            return;
        }

        // 防止重复加载相同页面
        if (loadedPages.has(nextPageUrl)) return;

        try {
            loadMoreButton.disabled = true;
            loadMoreButton.textContent = '加载中...';

            const response = await fetch(nextPageUrl);
            if (!response.ok) throw new Error(`HTTP错误: ${response.status}`);

            const html = await response.text();
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = html;

            // 插入新评论
            const commentList = document.querySelector('.comment-list');
            const newComments = tempDiv.querySelector('.comment-list');
            if (newComments) {
                commentList.insertAdjacentHTML('beforeend', newComments.innerHTML);
                
                // 初始化新加载的代码块
                $(commentList).find('pre').each(function() {
                    initSingleCodeModal(this);
                });
            }

            // 更新分页导航
            const newNavigator = tempDiv.querySelector('.page-navigator');
            if (newNavigator) {
                document.querySelector('.page-navigator').innerHTML = newNavigator.innerHTML;
            }

            updateLoadMoreButton(tempDiv);
            scrollToLatestComment();
            loadedPages.add(nextPageUrl);
            // 重新绑定评论提交事件
            initCommentSubmit();
        } catch (error) {
            console.error('加载失败:', error);
            Qmsg.error('加载失败，请重试');
        } finally {
            loadMoreButton.disabled = false;
            loadMoreButton.textContent = '加载更多';
        }
    });
}

/**
 * 更新加载更多按钮的状态
 * @param {HTMLElement} tempDiv - 临时容器，包含新加载的HTML
 */
function updateLoadMoreButton(tempDiv) {
    const loadMoreButton = document.getElementById('load-more-comments');
    if (!loadMoreButton) return;

    // 如果没有下一页链接，隐藏按钮
    const hasNextPage = tempDiv ? tempDiv.querySelector('.page-navigator .next a') : document.querySelector('.page-navigator .next a');
    if (!hasNextPage) {
        loadMoreButton.style.display = 'none';
    }
}

/**
 * 滚动到最新加载的评论
 */
function scrollToLatestComment() {
    const comments = document.querySelectorAll('.comment-list');
    if (comments.length > 0) {
        // 滚动到最新评论的位置
        comments[comments.length - 1].scrollIntoView({ behavior: 'smooth' });

        // 自动下滑155px
        window.scrollBy({
            top: 155,
            behavior: 'smooth'
        });
    }
}

/* ====================================================
 *                  AJAX评论功能
 * ==================================================== */
function initCommentSubmit() {
    $('.submit').on('click', function (e) {
        e.preventDefault();
        var action = $('#comment-form').attr('action') + '?time=' + new Date();
        var mail = $("#mail").val();
        var author = $("#author").val();
        var url = $("#url").val();
        var parent = $('#comment-parent') ? $('#comment-parent').val() : null;
        let text = $("#textarea").val();

        // 表单验证
        if (!/\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/.test(mail)) 
            return Qmsg.warning('请输入正确的邮箱！');
        if (author.trim() === '') 
            return Qmsg.warning('请输入昵称！');
        if (text.trim() === '') 
            return Qmsg.warning('请输入评论内容！');

        Qmsg.loading('评论中...');

        $.ajax({
            url: action,
            type: 'POST',
            data: { author, mail, text, parent, url },
            dataType: 'text',
            success(data) {
                Qmsg.closeAll();
                Qmsg.success('评论成功！');

                // 更新评论数量
                var commentText = $('.comments-title b').text().replace(/[^0-9]/g, '');
                var num = commentText ? parseInt(commentText) : 0;
                $('.comments-title b').text(num + 1 + ' 条评论');

                // 清空评论框
                $('#textarea').val('');

                // 获取新评论ID
                var newCommentId = $(".comment-body", data).map(function () {
                    return this.id.match(/\d+/);
                }).get().sort(function (a, b) { return a - b }).pop();

                // 插入新评论
                if (newCommentId) {
                    var newComment = $("#li-comment-" + newCommentId, data);
                    insertComment(newComment, parent);
                }
            },
            error(data) {
                var word = $.trim(data.responseText.match(/<div\sclass="container">([\s\S]*?)<\/div>/)[1]);
                var msg = word ? word : '评论失败！';
                Qmsg.closeAll();
                Qmsg.error(msg);

                // 尝试从错误响应中提取评论信息
                var newCommentId = $(".comment-body", data.responseText).map(function () {
                    return this.id.match(/\d+/);
                }).get().sort(function (a, b) { return a - b }).pop();

                if (newCommentId) {
                    var newComment = $("#li-comment-" + newCommentId, data.responseText);
                    insertComment(newComment, parent);
                }
            }
        });

        /**
         * 插入新评论到DOM
         * @param {jQuery} newComment - 新评论元素
         * @param {string|null} parent - 父评论ID
         */
        function insertComment(newComment, parent) {
            if (!parent) {
                // 处理父级评论
                var noCommentsElement = $('.comments-main .no-comments');
                if (noCommentsElement.length > 0) {
                    // 替换"暂无评论"提示
                    noCommentsElement.replaceWith(newComment);
                    if (!$('.comments-main .comment-list').length) {
                        $('.comments-main').append('<ol class="comment-list"></ol>');
                    }
                    $('.comments-main .comment-list').first().prepend(newComment);
                } else {
                    if (!$('.comments-main .comment-list').length) {
                        $('.comments-main').append('<ol class="comment-list"></ol>');
                    }
                    $('.comments-main .comment-list').first().prepend(newComment);
                }
            } else {
                // 处理子级评论
                let parentComment = $('#li-comment-' + parent);
                let childrenList = parentComment.find('.comment-children .comment-list');

                if (!childrenList.length) {
                    // 创建子评论列表
                    parentComment.append('<div class="comment-children"><ol class="comment-list"></ol></div>');
                    childrenList = parentComment.find('.comment-children .comment-list');
                }
                childrenList.first().prepend(newComment);
                TypechoComment.cancelReply();
            }
        }
    });
}

/* ====================================================
 *                  文章点赞功能
 * ==================================================== */
function initLikeFunction() {
    // 使用事件委托处理点赞
    $(document).on('click', '.post_like', function (e) {
        e.preventDefault();
        var $this = $(this);
        var cid = $this.data('id');

        // 检查24小时内是否已点赞
        var lastLikeTime = localStorage.getItem('like_' + cid);
        if (lastLikeTime) {
            var now = new Date().getTime();
            var twentyFourHours = 24 * 60 * 60 * 1000;
            if (now - parseInt(lastLikeTime) < twentyFourHours) {
                Qmsg.closeAll();
                Qmsg.error('明天再来吧！');
                return false;
            }
        }

        if ($this.hasClass('loading')) return false;

        $this.addClass('loading');

        $.ajax({
            url: window.location.href,
            type: 'POST',
            data: {
                action: 'specs_zan',
                cid: cid
            },
            success: function (data) {
                $this.find('.count').text(data);
                $this.addClass('done');
                // 记录点赞时间
                localStorage.setItem('like_' + cid, new Date().getTime());
                Qmsg.closeAll();
                Qmsg.success('点赞成功！');
                setTimeout(function () {
                    $this.removeClass('done');
                }, 1000);
            },
            complete: function () {
                $this.removeClass('loading');
            }
        });

        return false;
    });
}

/* ====================================================
 *                  文档加载初始化
 * ==================================================== */
document.addEventListener("DOMContentLoaded", () => {
    initRewardModal();    // 初始化赞助弹窗
    initNoticeModal();    // 初始化通知弹窗
    initCarousel();       // 初始化轮播图
    setupScrollLoad();    // 设置无限滚动
    initMenu();           // 初始化移动端菜单
    comments_next();      // 初始化评论加载更多
    initPage();           // 初始化评论代码美化
    initCommentSubmit();  // 初始化AJAX评论
    initLikeFunction();   // 初始化点赞功能
});